#!/usr/bin/env nodejs

var debug = require( 'debug' )( 'framework:server' );
var http = require('http');
var server;

/** Takes port and serverfile from proxy */
module.exports.listen = function(file, port){
  try{
    var app = require(file);
    app.set('port', port);
    server = http.createServer(app);
    server.listen(port, '0.0.0.0');
    server.on('error', onError);
    server.on('listening', onListening);
  }catch(err){
    console.log(err);
    console.log('Should probably require the right filename');
  }

  /** Event listener for HTTP server "error" event. */
  function onError( error ) {
    if ( error.syscall !== 'listen' ) {
      throw error;
    }
    var bind = typeof port === 'string' ?
      'Pipe ' + port : 'Port ' + port;
    // handle specific listen errors with friendly messages
    switch ( error.code ) {
      case 'EACCES':
        console.error( bind + ' requires elevated privileges' );
        process.exit( 1 );
        break;
      case 'EADDRINUSE':
        console.error( bind + ' is already in use' );
        process.exit( 1 );
        break;
      default:
        throw error;
    }
  }

  /** Event listener for HTTP server "listening" event. */
  function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
      'pipe ' + addr :
      'port ' + addr.port;
    debug( 'Listening on ' + bind );
  }
};
